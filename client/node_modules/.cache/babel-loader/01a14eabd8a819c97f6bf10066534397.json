{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anshika Mishra\\\\Desktop\\\\CHAT-APP\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.js\";\nimport React, { useState, useEffect } from \"react\";\nimport queryString from 'query-string';\nimport io from \"socket.io-client\"; // import TextContainer from '../TextContainer/TextContainer';\n// import Messages from '../Messages/Messages';\n// import InfoBar from '../InfoBar/InfoBar';\n// import Input from '../Input/Input';\n\nimport './Chat.css'; //const ENDPOINT = 'https://project-chat-application.herokuapp.com/';\n\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [users, setUsers] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search); //socket = io(ENDPOINT);\n\n    setRoom(room);\n    setName(name);\n    socket.emit('join', {\n      name,\n      room\n    }, error => {\n      if (error) {\n        alert(error);\n      }\n    });\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages(messages => [...messages, message]);\n    });\n    socket.on(\"roomData\", ({\n      users\n    }) => {\n      setUsers(users);\n    });\n  }, []);\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"outerContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: message,\n    onChange: event => setMessage(event.target.valye),\n    onKeyPress: event => event.key === 'Enter' ? sendMessage(event) : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default Chat;","map":{"version":3,"sources":["C:/Users/Anshika Mishra/Desktop/CHAT-APP/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","socket","Chat","location","name","setName","room","setRoom","users","setUsers","message","setMessage","messages","setMessages","parse","search","emit","error","alert","ENDPOINT","on","sendMessage","event","preventDefault","target","valye","key"],"mappings":";AAIA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf,C,CAEA;AACA;AACA;AACA;;AAEA,OAAO,YAAP,C,CAEA;;AAEA,IAAIC,MAAJ;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC7B,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM;AAAEM,MAAAA,IAAF;AAAQE,MAAAA;AAAR,QAAiBP,WAAW,CAACe,KAAZ,CAAkBX,QAAQ,CAACY,MAA3B,CAAvB,CADc,CAGd;;AAEAR,IAAAA,OAAO,CAACD,IAAD,CAAP;AACAD,IAAAA,OAAO,CAACD,IAAD,CAAP;AAEAH,IAAAA,MAAM,CAACe,IAAP,CAAY,MAAZ,EAAoB;AAAEZ,MAAAA,IAAF;AAAQE,MAAAA;AAAR,KAApB,EAAqCW,KAAD,IAAW;AAC7C,UAAGA,KAAH,EAAU;AACRC,QAAAA,KAAK,CAACD,KAAD,CAAL;AACD;AACF,KAJD;AAKD,GAbQ,EAaN,CAACE,QAAD,EAAWhB,QAAQ,CAACY,MAApB,CAbM,CAAT;AAeAjB,EAAAA,SAAS,CAAC,MAAM;AACdG,IAAAA,MAAM,CAACmB,EAAP,CAAU,SAAV,EAAqBV,OAAO,IAAI;AAC9BG,MAAAA,WAAW,CAACD,QAAQ,IAAI,CAAE,GAAGA,QAAL,EAAeF,OAAf,CAAb,CAAX;AACD,KAFD;AAIAT,IAAAA,MAAM,CAACmB,EAAP,CAAU,UAAV,EAAsB,CAAC;AAAEZ,MAAAA;AAAF,KAAD,KAAe;AACnCC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAFD;AAGH,GARU,EAQR,EARQ,CAAT;;AAUA,QAAMa,WAAW,GAAIC,KAAD,IAAW;AAC7BA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAGb,OAAH,EAAY;AACVT,MAAAA,MAAM,CAACe,IAAP,CAAY,aAAZ,EAA2BN,OAA3B,EAAoC,MAAMC,UAAU,CAAC,EAAD,CAApD;AACD;AACF,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AACK,IAAA,KAAK,EAAED,OADZ;AAEK,IAAA,QAAQ,EAAGY,KAAD,IAASX,UAAU,CAACW,KAAK,CAACE,MAAN,CAAaC,KAAd,CAFlC;AAGK,IAAA,UAAU,EAAEH,KAAK,IAAGA,KAAK,CAACI,GAAN,KAAY,OAAZ,GAAsBL,WAAW,CAACC,KAAD,CAAjC,GAA0C,IAHnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADF,CADF;AAYD,CApDD;;AAuDA,eAAepB,IAAf","sourcesContent":["\r\n\r\n\r\n  \r\nimport React, { useState, useEffect } from \"react\";\r\nimport queryString from 'query-string';\r\nimport io from \"socket.io-client\";\r\n\r\n// import TextContainer from '../TextContainer/TextContainer';\r\n// import Messages from '../Messages/Messages';\r\n// import InfoBar from '../InfoBar/InfoBar';\r\n// import Input from '../Input/Input';\r\n\r\nimport './Chat.css';\r\n\r\n//const ENDPOINT = 'https://project-chat-application.herokuapp.com/';\r\n\r\nlet socket;\r\n\r\nconst Chat = ({ location }) => {\r\n  const [name, setName] = useState('');\r\n  const [room, setRoom] = useState('');\r\n  const [users, setUsers] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const { name, room } = queryString.parse(location.search);\r\n\r\n    //socket = io(ENDPOINT);\r\n\r\n    setRoom(room);\r\n    setName(name)\r\n\r\n    socket.emit('join', { name, room }, (error) => {\r\n      if(error) {\r\n        alert(error);\r\n      }\r\n    });\r\n  }, [ENDPOINT, location.search]);\r\n  \r\n  useEffect(() => {\r\n    socket.on('message', message => {\r\n      setMessages(messages => [ ...messages, message ]);\r\n    });\r\n    \r\n    socket.on(\"roomData\", ({ users }) => {\r\n      setUsers(users);\r\n    });\r\n}, []);\r\n\r\n  const sendMessage = (event) => {\r\n    event.preventDefault();\r\n\r\n    if(message) {\r\n      socket.emit('sendMessage', message, () => setMessage(''));\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"outerContainer\">\r\n      <div className=\"container\">\r\n      <input\r\n           value={message}\r\n           onChange={(event)=>setMessage(event.target.valye)} \r\n           onKeyPress={event=> event.key==='Enter' ? sendMessage(event): null}\r\n           />\r\n      </div>\r\n    \r\n    </div> \r\n  );\r\n}\r\n\r\n\r\nexport default Chat;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}
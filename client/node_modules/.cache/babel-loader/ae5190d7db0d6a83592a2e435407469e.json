{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Anshika Mishra\\\\Desktop\\\\CHAT-APP\\\\client\\\\src\\\\components\\\\Chat\\\\Chat.js\";\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport io from 'socket.io-client';\nimport './Chat.css';\nimport Messages from '../Messages/Messages';\nimport Infobar from '../Infobar/Infobar';\nimport Input from '../Input/Input';\nlet socket;\n\nconst Chat = ({\n  location\n}) => {\n  const [name, setName] = useState('');\n  const [room, setRoom] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const ENDPOINT = 'localhost:5000';\n  useEffect(() => {\n    const {\n      name,\n      room\n    } = queryString.parse(location.search);\n    socket = io('localhost:5000');\n    setName(name);\n    setRoom(room);\n    socket.emit('join', {\n      name,\n      room\n    }, ({\n      error\n    }) => {});\n    return () => {\n      socket.emit('disconnect');\n      socket.off();\n    };\n  }, [ENDPOINT, location.search]);\n  useEffect(() => {\n    socket.on('message', message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]);\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  console.log(message, messages);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"outerContanier\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Contanier\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Infobar, {\n    room: room,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(Input, {\n    message: message,\n    setMessage: setMessage,\n    sendMessage: sendMessage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 10\n    }\n  }), /*#__PURE__*/React.createElement(Messages, {\n    messages: messages,\n    name: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 10\n    }\n  })));\n};\n\nexport default Chat;","map":{"version":3,"sources":["C:/Users/Anshika Mishra/Desktop/CHAT-APP/client/src/components/Chat/Chat.js"],"names":["React","useState","useEffect","queryString","io","Messages","Infobar","Input","socket","Chat","location","name","setName","room","setRoom","message","setMessage","messages","setMessages","ENDPOINT","parse","search","emit","error","off","on","sendMessage","event","preventDefault","console","log"],"mappings":"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","sourcesContent":["import React, {useState,useEffect } from 'react'; \r\n import queryString from 'query-string';\r\n import io from 'socket.io-client'\r\n import './Chat.css'\r\n\r\n\r\n import Messages from '../Messages/Messages';\r\n import Infobar from '../Infobar/Infobar'\r\n import Input from '../Input/Input'\r\n\r\n\r\n \r\n\r\n let socket;\r\n\r\n \r\nconst Chat = ({location}) => {\r\nconst [name,setName] =useState('');\r\nconst [room, setRoom] = useState('');\r\nconst [message, setMessage] = useState('');\r\nconst [messages, setMessages] = useState([]);\r\nconst ENDPOINT='localhost:5000';\r\n\r\n    useEffect(()=>{\r\n        const {name, room} =queryString.parse(location.search)\r\n        socket=io('localhost:5000');\r\n        setName(name);\r\n        setRoom(room);\r\n         socket.emit('join',{name,room},({error}) => {\r\n        });\r\n        return()=>{\r\n            socket.emit('disconnect');\r\n            socket.off(); \r\n        }\r\n\r\n   },[ENDPOINT ,location.search]);\r\n\r\n   useEffect(()=> \r\n    {\r\n        socket.on('message',(message)=>\r\n        {\r\n             setMessages([...messages,message]);\r\n        })\r\n    },[messages]); \r\n\r\n    const sendMessage =(event)=>\r\n    {\r\n        event.preventDefault();\r\n        if(message)\r\n        {\r\n            socket.emit('sendMessage', message,()=> setMessage(''));\r\n        }\r\n    }\r\n         console.log(message,messages);\r\n    return (\r\n        <div className=\"outerContanier\">\r\n            <div  className=\"Contanier\">\r\n         <Infobar room={room} />\r\n         <Input message={message} setMessage={setMessage} sendMessage={sendMessage} />\r\n         <Messages messages={messages} name={name} />\r\n         \r\n             </div>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default Chat;  "]},"metadata":{},"sourceType":"module"}